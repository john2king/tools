1 string-char
string类的两个方法转为char
c_str(),data()
反过来：
std:string to_string(char *)
2.output file
out_feature.open("train.txt",ios::app|ios::out);

3.c++ 读取从txt读取landmark
  getline(in_lm,line_lm);
  stringstream sslm(line_lm);
  vector<Point2f>landmark;
  for (int k=0;k<21;k++)
  {
      float x,y;
      sslm>>x>>y;
      landmark.push_back(Point2f(x,y));
  }
  
4.feature extraction未封装版（xuGetSIFTDescriptor）
(1)
    Mat _descriptorSingle=Mat(1,SIFT_DIMENSION,CV_32F,Scalar(0.f));
    assert(m_gray.channels()==1);
    m_feature=Mat(1,landmark.size()*SIFT_DIMENSION,CV_32F,Scalar(0.f));
    float*pfeature=(float*)m_feature.data;
    float*pdescriptorSingle=(float*)_descriptorSingle.data;
    for(int k=0; k<landmark.size(); k++)
    {
        xuGetSIFTDescriptor(m_gray, landmark[k], pdescriptorSingle);
        memcpy(&pfeature[k*SIFT_DIMENSION], &pdescriptorSingle[0], sizeof(float)*SIFT_DIMENSION);
    }
(2)
    getline(in_fea,line_fea)
    stringstream ssfe(line_fea)
     Mat m_features(1,2688,CV_32F);
     float*pfeature=(float*)m_features.data;
     for (int k=0;k<2688;k++)
     {
         float x;
         ssfe>>x;
         pfeature[k]=x;
     }
5.excute linux shell 
    string norm_path = "../resource/img_output/" + score_level + "/norm/"+sep[0];
    string cmd_norm = "[ ! -d "+ norm_path + " ] && mkdir " + norm_path;
    system(cmd_norm.c_str());
    
6.timer
    timeval starttime,endtime;
    gettimeofday(&starttime,0);
    gettimeofday(&endtime,0);
    double timeuse = 1000000*(endtime.tv_sec - starttime.tv_sec) + endtime.tv_usec - starttime.tv_usec;

7.opencv:read frame according to frame no.
    VideoCapture cap(videoPath);
    cap.set(CV_CAP_PROP_POS_FRAMES,frameNum - 1);
    cap.read(mBGRVideo);
8.
    enum featureType{frontal_score,illumination_score,motion_score,
                      realface_score,unocclusion_score,clear_score,yaw,pitch,roll};
    //featureType feaNum ;//= argv[1];
    featureType mp;
    try
    {
       if (argc == 2)
       {
          //std::stoi could throw exception on error in input
          mp = static_cast<featureType>(std::stoi(argv[1]));
       }
       //use mp here
       cout<<mp<<endl;
       //cout<<1+mp<<endl;
    }
    catch(std::exception const & e)
    {
       std::cout << "exception caught with message : " << e.what() << std::endl;
    }
    
9.hunter usage
export LD_LIBRARY_PATH=/home/jinxiao/sdk/st_face-5.4.0-beta-linux-ccf4f08/libs/linux-x86_64

10. extract_feature serialize and deserialize
    char *string_feature_1 = new char[CV_ENCODE_FEATURE_SIZE(dbVipFaces.p_feature)];
    cv_verify_serialize_feature(dbVipFaces.p_feature, string_feature_1);
    string faceFea = string_feature_1;
    faceFeature.push_back(make_pair(folderName + "/" + dbFacesImgName,faceFea));
    
    DBface.p_feature = cv_verify_deserialize_feature(iterDB->second.c_str());
11。
void read_lm_from_image_name(string image_name,vector<cv_pointf_t> & lm_21_point){
	vector<string> split_str1 = split(image_name,'.');
	vector<string> split_str2 = split(split_str1[0],'_');
	assert(split_str2.size() == 43);
	for(int i = 1;i < 43;i+=2){
		lm_21_point.x = stof(split_str2[i]);
		lm_21_point.y = stof(split_str2[i+1]);
		cout<<"lm_21_point.y" << lm_21_point.y << endl;
	}

}
